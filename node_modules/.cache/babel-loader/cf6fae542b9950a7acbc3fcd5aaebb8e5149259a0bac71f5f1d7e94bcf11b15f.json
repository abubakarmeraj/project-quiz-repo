{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FC\\\\Desktop\\\\project-quiz\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// Array of quiz questions and their corresponding answers with a \"fear score\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst quizQuestions = [{\n  question: \"How ready are you for the big day?\",\n  answers: [{\n    text: \"I've memorized the grade boundaries. I'm ready!\",\n    score: 10,\n    emoji: \"💪\"\n  }, {\n    text: \"I've been praying since June. That's my prep.\",\n    score: 30,\n    emoji: \"🙏\"\n  }, {\n    text: \"Ready? I've already accepted my fate. What's there to be ready for?\",\n    score: 60,\n    emoji: \"🤷‍♂️\"\n  }, {\n    text: \"I've been practicing my poker face for my parents. Wish me luck.\",\n    score: 90,\n    emoji: \"😐\"\n  }],\n  warning: null\n}, {\n  question: \"What will you do if your grades are… unexpected?\",\n  answers: [{\n    text: \"Call my teacher and ask for a recount. Immediately.\",\n    score: 80,\n    emoji: \"😤\"\n  }, {\n    text: \"Blame the school's WiFi for distracting me during online lessons.\",\n    score: 70,\n    emoji: \"🤦‍♀️\"\n  }, {\n    text: \"Act like they're exactly what I expected and walk away confidently.\",\n    score: 50,\n    emoji: \"😎\"\n  }, {\n    text: \"Start looking for a new career path... maybe a professional gamer?\",\n    score: 40,\n    emoji: \"🎮\"\n  }],\n  warning: \"Oh boy… this isn’t looking good...\"\n}, {\n  question: \"Do you think you'll see the sunrise on the 20th?\",\n  answers: [{\n    text: \"Of course! I'll be celebrating all night!\",\n    score: 10,\n    emoji: \"🥳\"\n  }, {\n    text: \"I might, but only if I'm not hiding under my bed.\",\n    score: 40,\n    emoji: \"🛌\"\n  }, {\n    text: \"The sunrise? I'm pretty sure I'll be a ghost by then.\",\n    score: 90,\n    emoji: \"👻\"\n  }, {\n    text: \"My parents will make sure I'm up, whether I want to be or not.\",\n    score: 60,\n    emoji: \"⏰\"\n  }],\n  warning: \"Are you sure you want to answer that?\"\n}, {\n  question: \"How will you survive your parents?\",\n  answers: [{\n    text: \"I'll use my newfound 'adult' attitude to discuss my future calmly.\",\n    score: 20,\n    emoji: \"🧠\"\n  }, {\n    text: \"I have a detailed escape plan involving a bicycle and a small backpack.\",\n    score: 80,\n    emoji: \"🏃‍♀️\"\n  }, {\n    text: \"I'll try to distract them with my younger sibling's report card.\",\n    score: 70,\n    emoji: \"😈\"\n  }, {\n    text: \"I will simply cease to exist for a few days. They'll forget.\",\n    score: 90,\n    emoji: \"💨\"\n  }],\n  warning: null\n}];\nconst Quiz = ({\n  onEndQuiz\n}) => {\n  _s();\n  // Current question index to navigate through the quizQuestions array\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  // Total score accumulated from user answers\n  const [score, setScore] = useState(0);\n\n  // Get the current question object from the array\n  const currentQuestion = quizQuestions[currentQuestionIndex];\n\n  // This function is called when a user clicks on an answer button\n  const handleAnswerClick = selectedScore => {\n    // Add the selected answer's score to the total score\n    setScore(prevScore => prevScore + selectedScore);\n\n    // If this is the last question, end the quiz\n    if (currentQuestionIndex === quizQuestions.length - 1) {\n      onEndQuiz(score + selectedScore); // Pass the final score to the parent component\n    } else {\n      // Otherwise, move to the next question\n      setCurrentQuestionIndex(prevIndex => prevIndex + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-text\",\n      children: currentQuestion.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answer-options\",\n      children: currentQuestion.answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"answer-button\",\n        onClick: () => handleAnswerClick(answer.score),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"emoji\",\n          children: answer.emoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), \" \", answer.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), currentQuestion.warning && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"warning-message\",\n      children: currentQuestion.warning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"VSe/zGaszi5H8U3t1r1DTVKnbNg=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","quizQuestions","question","answers","text","score","emoji","warning","Quiz","onEndQuiz","_s","currentQuestionIndex","setCurrentQuestionIndex","setScore","currentQuestion","handleAnswerClick","selectedScore","prevScore","length","prevIndex","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","answer","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/FC/Desktop/project-quiz/src/components/Quiz.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// Array of quiz questions and their corresponding answers with a \"fear score\"\r\nconst quizQuestions = [\r\n  {\r\n    question: \"How ready are you for the big day?\",\r\n    answers: [\r\n      { text: \"I've memorized the grade boundaries. I'm ready!\", score: 10, emoji: \"💪\" },\r\n      { text: \"I've been praying since June. That's my prep.\", score: 30, emoji: \"🙏\" },\r\n      { text: \"Ready? I've already accepted my fate. What's there to be ready for?\", score: 60, emoji: \"🤷‍♂️\" },\r\n      { text: \"I've been practicing my poker face for my parents. Wish me luck.\", score: 90, emoji: \"😐\" },\r\n    ],\r\n    warning: null,\r\n  },\r\n  {\r\n    question: \"What will you do if your grades are… unexpected?\",\r\n    answers: [\r\n      { text: \"Call my teacher and ask for a recount. Immediately.\", score: 80, emoji: \"😤\" },\r\n      { text: \"Blame the school's WiFi for distracting me during online lessons.\", score: 70, emoji: \"🤦‍♀️\" },\r\n      { text: \"Act like they're exactly what I expected and walk away confidently.\", score: 50, emoji: \"😎\" },\r\n      { text: \"Start looking for a new career path... maybe a professional gamer?\", score: 40, emoji: \"🎮\" },\r\n    ],\r\n    warning: \"Oh boy… this isn’t looking good...\",\r\n  },\r\n  {\r\n    question: \"Do you think you'll see the sunrise on the 20th?\",\r\n    answers: [\r\n      { text: \"Of course! I'll be celebrating all night!\", score: 10, emoji: \"🥳\" },\r\n      { text: \"I might, but only if I'm not hiding under my bed.\", score: 40, emoji: \"🛌\" },\r\n      { text: \"The sunrise? I'm pretty sure I'll be a ghost by then.\", score: 90, emoji: \"👻\" },\r\n      { text: \"My parents will make sure I'm up, whether I want to be or not.\", score: 60, emoji: \"⏰\" },\r\n    ],\r\n    warning: \"Are you sure you want to answer that?\",\r\n  },\r\n  {\r\n    question: \"How will you survive your parents?\",\r\n    answers: [\r\n      { text: \"I'll use my newfound 'adult' attitude to discuss my future calmly.\", score: 20, emoji: \"🧠\" },\r\n      { text: \"I have a detailed escape plan involving a bicycle and a small backpack.\", score: 80, emoji: \"🏃‍♀️\" },\r\n      { text: \"I'll try to distract them with my younger sibling's report card.\", score: 70, emoji: \"😈\" },\r\n      { text: \"I will simply cease to exist for a few days. They'll forget.\", score: 90, emoji: \"💨\" },\r\n    ],\r\n    warning: null,\r\n  },\r\n];\r\n\r\nconst Quiz = ({ onEndQuiz }) => {\r\n  // Current question index to navigate through the quizQuestions array\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  // Total score accumulated from user answers\r\n  const [score, setScore] = useState(0);\r\n\r\n  // Get the current question object from the array\r\n  const currentQuestion = quizQuestions[currentQuestionIndex];\r\n\r\n  // This function is called when a user clicks on an answer button\r\n  const handleAnswerClick = (selectedScore) => {\r\n    // Add the selected answer's score to the total score\r\n    setScore(prevScore => prevScore + selectedScore);\r\n\r\n    // If this is the last question, end the quiz\r\n    if (currentQuestionIndex === quizQuestions.length - 1) {\r\n      onEndQuiz(score + selectedScore); // Pass the final score to the parent component\r\n    } else {\r\n      // Otherwise, move to the next question\r\n      setCurrentQuestionIndex(prevIndex => prevIndex + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"quiz-container\">\r\n      <div className=\"question-text\">{currentQuestion.question}</div>\r\n      <div className=\"answer-options\">\r\n        {currentQuestion.answers.map((answer, index) => (\r\n          <button\r\n            key={index}\r\n            className=\"answer-button\"\r\n            onClick={() => handleAnswerClick(answer.score)}\r\n          >\r\n            <span className=\"emoji\">{answer.emoji}</span> {answer.text}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      {/* Conditionally render a warning message if it exists for the current question */}\r\n      {currentQuestion.warning && (\r\n        <div className=\"warning-message\">{currentQuestion.warning}</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}